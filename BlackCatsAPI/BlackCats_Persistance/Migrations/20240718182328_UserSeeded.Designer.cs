// <auto-generated />
using System;
using BlackCats_Persistance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackCats_Persistance.Migrations
{
    [DbContext(typeof(BCPSDbContext))]
    [Migration("20240718182328_UserSeeded")]
    partial class UserSeeded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BlackCats_Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<string>("ResetCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a233a5ed-8fcc-4a90-88e2-e5d6d7d39f2d"),
                            ContactNo = "7006342430",
                            CreatedAt = new DateTime(2024, 7, 18, 23, 53, 27, 50, DateTimeKind.Local).AddTicks(3131),
                            Email = "admin@gmail.com",
                            Name = "admin",
                            PasswordHash = new byte[] { 75, 140, 20, 182, 34, 202, 63, 225, 126, 89, 2, 253, 27, 100, 25, 86, 98, 87, 42, 97, 228, 37, 76, 76, 144, 109, 169, 208, 127, 5, 220, 226 },
                            PasswordSalt = new byte[] { 46, 215, 238, 168, 129, 32, 169, 151, 112, 113, 93, 75, 111, 47, 52, 55, 136, 209, 238, 67, 217, 0, 48, 35, 158, 228, 204, 227, 225, 128, 233, 139, 201, 240, 250, 201, 174, 193, 176, 242, 200, 102, 234, 188, 162, 215, 120, 148, 255, 157, 70, 115, 26, 192, 60, 38, 96, 90, 64, 12, 24, 191, 7, 162 },
                            RefreshToken = "",
                            UserName = "admin",
                            UserRole = 1,
                            UserStatus = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
